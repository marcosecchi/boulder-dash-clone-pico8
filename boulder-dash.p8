pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
Player = {}

Game = {}

function _init()
  Game.status = "start"
end

function _update()
  CheckKeyPress()
end

function _draw()
  cls()
  if(Game.status == "start") then
    DrawStartScreen()
  elseif(Game.status == "game over") then
    DrawEndScreen()
  else
    DrawMap()
    DrawPlayer()
  end
end

function InitPlayer()
  Player.posX = 1
  Player.PosY = 1
end

function CheckKeyPress()
  if(Game.status == "start" and btnp(4)) then
    Game.status = "play"
    return
  elseif (Game.status == "game over" and btnp(4)) then
    ResetGame()
    Game.status = "start"
    return
  end

  local nextPosX = Player.posX
  local nextPosY = Player.posY

  -- Calcolo il possibile movimento verticale del giocatore
  -- if(key == "up") then
  --  nextPosY = nextPosY - 1
  -- elseif (key == "down") then
  --  nextPosY = nextPosY + 1
  -- end

  -- Calcolo il possibile movimento orizzontale del giocatore
  -- if(key == "right") then
  --  nextPosX = nextPosX + 1
  -- elseif (key == "left") then
  --  nextPosX = nextPosX - 1
  --end

end

function ResetGame()
-- Ricaricare la mappa
  InitPlayer()
end

function DrawPlayer()

end

function DrawMap()
  for i, row in pairs(map) do
    for j, column in pairs(row) do
      spr(column, (j - 1) * 8, (i - 1) * 8)
    end
  end
end

function DrawStartScreen()
  print("boulder dash (CLONE)", 26, 50, 6)
  print("press 'z' to start", 30, 60, 6)
end

function DrawEndScreen()
  print("crushed by a boulder!", 24, 50, 6)
  print("press 'z' to replay", 27, 60, 6)
end

map = {
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 4, 4, 4, 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 1},
    {1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1},
    {1, 4, 4, 2, 3, 2, 3, 2, 3, 4, 4, 4, 4, 4, 1},
    {1, 4, 4, 4, 4, 4, 4, 6, 6, 4, 4, 4, 4, 4, 1},
    {1, 4, 4, 4, 4, 4, 4, 6, 6, 4, 4, 4, 4, 4, 1},
    {1, 4, 4, 4, 4, 4, 4, 6, 6, 4, 4, 4, 4, 4, 1},
    {1, 4, 4, 4, 4, 4, 4, 6, 6, 4, 4, 4, 4, 4, 1},
    {1, 4, 4, 4, 4, 4, 4, 6, 6, 4, 4, 4, 4, 4, 1},
    {1, 4, 4, 4, 4, 4, 4, 6, 6, 4, 4, 4, 4, 4, 1},
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
}
__gfx__
00000000444444441777717777177777141144110040040000777700000000000000000000000000000000000000000000000000000000000000000000000000
00000000411441141477714777144777444f41440414414007474970000000000000000000000000000000000000000000000000000000000000000000000000
007007004614461414444144441444441f1114140044440094949747000000000000000000000000000000000000000000000000000000000000000000000000
00077000444444441111111111111111f44f44410007700044444497000000000000000000000000000000000000000000000000000000000000000000000000
0007700044444444771777717777177711f44ff40045540044144944000000000000000000000000000000000000000000000000000000000000000000000000
007007004114411477144771477714774444144f0407704014414444000000000000000000000000000000000000000000000000000000000000000000000000
000000004614461444144441444414441ff4f4410095590001449440000000000000000000000000000000000000000000000000000000000000000000000000
000000004444444411111111111111114f44444f0770077000111400000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
